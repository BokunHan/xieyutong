---
description: 
globs: 
alwaysApply: false
---
# Cursor Rules Format

## Template Structure for Rules Files

```mdc
---
description: `Comprehensive description that provides full context and clearly indicates when this rule should be applied. Include key scenarios, impacted areas, and why following this rule is important. While being thorough, remain focused and relevant. The description should be detailed enough that the agent can confidently determine whether to apply the rule in any given situation.`
globs: .cursor/rules/**/*.mdc OR blank
alwaysApply: {true or false}
---

# Rule Title

## Critical Rules

- Concise, bulleted list of actionable rules the agent MUST follow

## Examples

<example>
{valid rule application}
</example>

<example type="invalid">
{invalid rule application}
</example>
```

### Organizational Folders (Create if non existent)
All rules files will be under an organizational folder within `.cursor/rules/`. These folders MUST follow the naming convention `NN-category-rules`, where `NN` is a two-digit number ensuring sequential ordering.

Examples:
- `00-core-rules` - Rules related to cursor agent behavior or rule generation specifically
- `01-global-rules` - Rules that are ALWAYS applied to every chat and cmd/ctrl-k context
- `02-requirements-rules` - Rules related to project requirements documentation or handling
- `03-ui-rules` - Rules about html, css, react, Vue, Angular, etc.
- `04-data-rules` - Rules related to data models
- `05-uniapp-rules` - Rules specific to UniApp development
- `06-uniCloud-rules` - Rules specific to UniCloud development, related to databases, APIs
- `07-tool-rules` - Rules specific to different tools, such as git, linux commands, MCP tools
- `08-testing-rules` - Rules about testing frameworks, strategies, and practices
* Create new folders under `.cursor/rules/` as needed following the `NN-category-rules` naming convention and sequential numbering.

## Glob Pattern Examples
Common glob patterns for different rule types:
- Core standards: .cursor/rules/*.mdc
- Language rules: *.cs, *.cpp
- Testing standards: *.test.ts, *.test.js
- React components: src/components/**/*.tsx
- Documentation: docs/**/*.md, *.md
- Configuration files: *.config.js
- Build artifacts: dist/**/*
- Multiple extensions: *.js, *.ts, *.tsx
- Multiple patterns: dist/**/*.*, docs/**/*.md, *test*.*

## Critical Rules
  - Rule files will be located and named ALWAYS as: `.cursor/rules/{organizational-folder}/rule-name-{auto|agent|manual|always}.mdc`
  - **Organizational folders MUST be named using the format `NN-category-rules` (e.g., `01-global-rules`, `06-tool-rules`) and placed directly under `.cursor/rules/`.**
  - Rules will NEVER be created anywhere other than `.cursor/rules/**` following the specified folder structure.
  - You will always check to see if there is an existing rule to update under all `.cursor/rules/NN-category-rules` sub-folders.
  - FrontMatter Rules Types:
    - The front matter section must always start the file and include all 3 fields, even if the field value will be blank - the types are:
      - Manual Rule: IF a Manual rule is requested - description and globs MUST be blank and alwaysApply: false and filename ends with -manual.mdc.
      - Auto Rule: IF a rule is requested that should apply always to certain glob patterns (example all typescript files or all markdown files) - description must be blank, and alwaysApply: false and filename ends with -auto.mdc.
      - Always Rule: Global Rule applies to every chat and cmd/ctrl-k - description and globs blank, and alwaysApply: true  and filename ends with -always.mdc.
      - Agent Select Rule: The rule does not need to be loaded into every chat thread, it serves a specific purpose. The description MUST provide comprehensive context about when to apply the rule, including scenarios like code changes, architecture decisions, bug fixes, or new file creation. Globs blank, and alwaysApply:false and filename ends with -agent.mdc
  - For Rule Content - focus on actionable, clear directives without unnecessary explanation
  - When a rule will only be used sometimes (alwaysApply: false) the description MUST provide enough context for the AI to confidently determine when to load and apply the rule
  - Use Concise Markdown Tailored to Agent Context Window usage
  - Always indent content within XML Example section with 2 spaces
  - Emojis and Mermaid diagrams are allowed and encouraged if it is not redundant and better explains the rule for the AI comprehension
  - While there is no strict line limit, be judicious with content length as it impacts performance. Focus on essential information that helps the agent make decisions
  - Always include a valid and invalid example
  - NEVER use quotes around glob patterns, NEVER group glob extensions with `{}`
  - If the request for a rule or a future behavior change includes context of a mistake is made, this would be great to use in the example for the rule
  - **After rule is created or updated, Respond with the following:**
    - AutoRuleGen Success: path/rule-name.mdc
    - Rule Type: {Rule Type}
    - Rule Description: {The exact content of the description field}

## Examples

<example>
  **✅ 创建或更新规则文件的正确流程:**
  1. **确定规则类型:** (Agent Select, Auto, Always, Manual)
  2. **确定组织文件夹:** 根据规则内容选择或创建合适的 `NN-category-rules` 文件夹 (e.g., `03-ui-rules`).
  3. **命名规则文件:** `.cursor/rules/03-ui-rules/consistent-button-style-agent.mdc`
  4. **编写 Front Matter:**
     ```mdc
     ---
     description: `Ensures all primary action buttons across the UI use the standard '.btn-primary' class and specific padding/margin values for consistency.`
     globs: 
     alwaysApply: false
     ---
     ```
  5. **编写规则内容:** (Critical Rules, Examples)

</example>

<example type="invalid">
  **❌ 错误的文件夹或文件命名:**
  - `.cursor/rules/ui/button-rules.mdc` (文件夹未使用 `NN-category-rules` 格式)
  - `.cursor/rules/03-ui/primary-buttons.mdc` (文件夹名缺少 `-rules` 后缀)
  - `.cursor/rules/06-tool-rules/git_commit_convention.mdc` (文件名未使用 kebab-case)
  - `.cursor/rules/01-global-rules/general-guidelines.mdc` (文件名缺少规则类型后缀 `-agent`, `-auto`, `-manual`, or `-always`)

  **❌ 错误的 Front Matter:**
  ```mdc
  ---
  # Missing description for Agent Select rule
  globs: *.tsx
  alwaysApply: false
  ---
  ```
  ```mdc
  ---
  description: Applies to all files.
  # Missing globs for Auto rule, should be blank if not applicable
  alwaysApply: false
  ---
  ```
  ```mdc
  ---
  description:
  globs:
  # alwaysApply missing
  ---
  ```
</example>
